{"version":3,"sources":["../../src/peer-connection.js"],"names":["CloseError","Error","constructor","message","name","code","PeerError","peerId","CredentialsError","PeerConnection","EventEmitter","id","address","maxPayloadLength","credentials","timeoutDuration","open","heartbeatInterval","ws","WS","maxPayload","on","emit","setInterval","readyState","send","Uint8Array","reason","clearInterval","data","CredentialsResponse","value","success","PeerResponse","Promise","resolve","reject","onOpen","removeListener","onError","error","once","sendCredentials","sendPeerRequest","close","onClose","handleClose","clearTimeout","timeout","handleCredentialsResponse","setTimeout","Math","round","Credentials","handlePeerResponse","PeerRequest","unpeer","Unpeer"],"mappings":"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","sourcesContent":["// @flow\n\nimport EventEmitter from 'events';\nimport WS from 'ws';\n\nimport {\n  encode,\n  decode,\n  Credentials,\n  CredentialsResponse,\n  PeerRequest,\n  PeerResponse,\n  Unpeer,\n} from '@bunchtogether/braid-messagepack';\n\nclass CloseError extends Error {\n  declare code: number;\n  constructor(message:string) {\n    super(message);\n    this.name = 'CloseError';\n    this.code = 502;\n  }\n}\n\nclass PeerError extends Error {\n  declare code: number;\n  declare peerId: number | void;\n  constructor(message:string, code:number, peerId?: number) {\n    super(message);\n    this.name = 'PeerError';\n    this.code = code;\n    this.peerId = peerId;\n  }\n}\n\nclass CredentialsError extends Error {\n  declare code: number;\n  constructor(message:string, code:number) {\n    super(message);\n    this.name = 'CredentialsError';\n    this.code = code;\n  }\n}\n\nexport default class PeerConnection extends EventEmitter {\n  constructor(id: number, address:string, maxPayloadLength: number, credentials?:Object = {}) {\n    super();\n    this.id = id;\n    this.address = address;\n    this.maxPayloadLength = maxPayloadLength;\n    this.credentials = credentials;\n    this.timeoutDuration = 5000;\n  }\n\n  async open():Promise<number> {\n    let heartbeatInterval;\n\n    const ws = new WS(this.address, {\n      maxPayload: this.maxPayloadLength,\n    });\n\n    ws.on('error', () => {\n      this.emit('error', new Error(`Websocket error when connecting to ${this.address}, check the 'close' event for additional details`));\n    });\n\n    ws.on('open', () => {\n      this.emit('open');\n      this.ws = ws;\n      heartbeatInterval = setInterval(() => {\n        if (ws.readyState === 1) {\n          ws.send(new Uint8Array([0]));\n        }\n      }, 5000);\n    });\n\n    ws.on('close', (code: number, reason:string) => {\n      delete this.ws;\n      this.emit('close', code, reason);\n      clearInterval(heartbeatInterval);\n    });\n\n    ws.on('message', (data) => {\n      const message = decode(data);\n      if (message instanceof CredentialsResponse) {\n        this.emit('credentialsResponse', message.value.success, message.value.code, message.value.message);\n      } else if (message instanceof PeerResponse) {\n        this.emit('peerResponse', message.value.id, message.value.success, message.value.code, message.value.message);\n      } else {\n        this.emit('message', message);\n      }\n    });\n\n    await new Promise((resolve, reject) => {\n      const onOpen = () => {\n        this.removeListener('error', onError);\n        resolve();\n      };\n      const onError = (error: Error) => {\n        this.removeListener('open', onOpen);\n        reject(error);\n      };\n      this.once('error', onError);\n      this.once('open', onOpen);\n    });\n    if (this.credentials) {\n      await this.sendCredentials(this.credentials);\n    }\n    const peerId = await this.sendPeerRequest();\n    return peerId;\n  }\n\n  async close(code?: number, reason?: string) {\n    if (!this.ws) {\n      throw new Error('Unable to close, socket does not exist');\n    }\n    await new Promise((resolve, reject) => {\n      const onClose = () => {\n        this.removeListener('error', onError);\n        resolve();\n      };\n      const onError = (error: Error) => {\n        this.removeListener('close', onClose);\n        reject(error);\n      };\n      this.once('error', onError);\n      this.once('close', onClose);\n      this.ws.close(code, reason);\n    });\n  }\n\n  async sendCredentials(credentials: Object) {\n    if (!this.ws) {\n      throw new Error('Unable to send credentials, not open');\n    }\n    await new Promise((resolve, reject) => {\n      const handleClose = () => {\n        clearTimeout(timeout);\n        this.removeListener('close', handleClose);\n        this.removeListener('credentialsResponse', handleCredentialsResponse);\n        reject(new CloseError('Connection closed before credentials response was received'));\n      };\n      const handleCredentialsResponse = (success, code, message) => {\n        clearTimeout(timeout);\n        this.removeListener('close', handleClose);\n        this.removeListener('credentialsResponse', handleCredentialsResponse);\n        if (success) {\n          resolve();\n        } else {\n          reject(new CredentialsError(message, code));\n        }\n      };\n      const timeout = setTimeout(() => {\n        this.removeListener('credentialsResponse', handleCredentialsResponse);\n        reject(new CredentialsError(`Credentials response timeout after ${Math.round(this.timeoutDuration / 100) / 10} seconds`, 504));\n      }, this.timeoutDuration);\n      this.on('close', handleClose);\n      this.on('credentialsResponse', handleCredentialsResponse);\n      this.ws.send(encode(new Credentials(credentials)));\n    });\n  }\n\n  sendPeerRequest():Promise<number> {\n    if (!this.ws) {\n      throw new Error('Unable to peer, not open');\n    }\n    return new Promise((resolve, reject) => {\n      const handleClose = () => {\n        clearTimeout(timeout);\n        this.removeListener('close', handleClose);\n        this.removeListener('peerResponse', handlePeerResponse);\n        reject(new CloseError('Connection closed before peer response was received'));\n      };\n      const handlePeerResponse = (id, success, code, message) => {\n        clearTimeout(timeout);\n        this.removeListener('close', handleClose);\n        this.removeListener('peerResponse', handlePeerResponse);\n        if (success) {\n          resolve(id);\n        } else {\n          reject(new PeerError(message, code, id));\n        }\n      };\n      const timeout = setTimeout(() => {\n        this.removeListener('peerResponse', handlePeerResponse);\n        reject(new PeerError(`Peer response timeout after ${Math.round(this.timeoutDuration / 100) / 10} seconds`, 504));\n      }, this.timeoutDuration);\n      this.on('close', handleClose);\n      this.on('peerResponse', handlePeerResponse);\n      this.ws.send(encode(new PeerRequest(this.id)));\n    });\n  }\n\n  unpeer() {\n    if (!this.ws) {\n      throw new Error('Unable to unpeer, not open');\n    }\n    this.ws.send(encode(new Unpeer()));\n  }\n\n  declare id:number;\n  declare address:string;\n  declare maxPayloadLength: number;\n  declare credentials: Object;\n  declare ws: WS;\n  declare timeoutDuration: number;\n}\n\n"],"file":"peer-connection.js"}