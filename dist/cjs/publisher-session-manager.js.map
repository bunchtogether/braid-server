{"version":3,"sources":["../../src/publisher-session-manager.js"],"names":["PublisherSessionManager","constructor","map","DirectedGraphMap","size","add","key","serverId","socketId","regexString","sessionKey","addEdge","removePublisher","removeSource","publishers","results","sessionKeys","getSources","serverIdString","socketIdString","split","parseInt","push","regexes","getTargets"],"mappings":";;;;;;;AAEA;;;;AAEe,MAAMA,uBAAN,CAA8B;AAG3CC,EAAAA,WAAW,GAAG;AACZ,SAAKC,GAAL,GAAW,IAAIC,yBAAJ,EAAX;AACD;;AAEO,MAAJC,IAAI,GAAG;AACT,WAAO,KAAKF,GAAL,CAASE,IAAhB;AACD;;AAEDC,EAAAA,GAAG,CAACC,GAAD,EAAaC,QAAb,EAA8BC,QAA9B,EAA+CC,WAA/C,EAAmE;AACpE,UAAMC,UAAU,GAAI,GAAEJ,GAAI,IAAGC,QAAS,IAAGC,QAAS,EAAlD;AACA,SAAKN,GAAL,CAASS,OAAT,CAAiBD,UAAjB,EAA6BD,WAA7B;AACD;;AAEDG,EAAAA,eAAe,CAACN,GAAD,EAAaC,QAAb,EAA8BC,QAA9B,EAA+C;AAC5D,UAAME,UAAU,GAAI,GAAEJ,GAAI,IAAGC,QAAS,IAAGC,QAAS,EAAlD;AACA,SAAKN,GAAL,CAASW,YAAT,CAAsBH,UAAtB;AACD;;AAEDI,EAAAA,UAAU,CAACL,WAAD,EAAqD;AAC7D,UAAMM,OAAO,GAAG,EAAhB;AACA,UAAMC,WAAW,GAAG,KAAKd,GAAL,CAASe,UAAT,CAAoBR,WAApB,CAApB;;AACA,SAAK,MAAMC,UAAX,IAAyBM,WAAzB,EAAsC;AACpC,YAAM,CAACV,GAAD,EAAMY,cAAN,EAAsBC,cAAtB,IAAwCT,UAAU,CAACU,KAAX,CAAiB,GAAjB,CAA9C;AACA,YAAMb,QAAQ,GAAGc,QAAQ,CAACH,cAAD,EAAiB,EAAjB,CAAzB;AACA,YAAMV,QAAQ,GAAGa,QAAQ,CAACF,cAAD,EAAiB,EAAjB,CAAzB;AACAJ,MAAAA,OAAO,CAACO,IAAR,CAAa,CAAChB,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,CAAb;AACD;;AACD,WAAOO,OAAP;AACD;;AAEDQ,EAAAA,OAAO,CAACjB,GAAD,EAAaC,QAAb,EAA8BC,QAA9B,EAA6D;AAClE,UAAME,UAAU,GAAI,GAAEJ,GAAI,IAAGC,QAAS,IAAGC,QAAS,EAAlD;AACA,WAAO,CAAC,GAAG,KAAKN,GAAL,CAASsB,UAAT,CAAoBd,UAApB,CAAJ,CAAP;AACD;;AApC0C","sourcesContent":["// @flow\n\nimport DirectedGraphMap from 'directed-graph-map';\n\nexport default class PublisherSessionManager {\n  declare map: DirectedGraphMap<string, string>;\n\n  constructor() {\n    this.map = new DirectedGraphMap();\n  }\n\n  get size() {\n    return this.map.size;\n  }\n\n  add(key:string, serverId:number, socketId:number, regexString:string) {\n    const sessionKey = `${key}:${serverId}:${socketId}`;\n    this.map.addEdge(sessionKey, regexString);\n  }\n\n  removePublisher(key:string, serverId:number, socketId:number) {\n    const sessionKey = `${key}:${serverId}:${socketId}`;\n    this.map.removeSource(sessionKey);\n  }\n\n  publishers(regexString:string):Array<[string, number, number]> {\n    const results = [];\n    const sessionKeys = this.map.getSources(regexString);\n    for (const sessionKey of sessionKeys) {\n      const [key, serverIdString, socketIdString] = sessionKey.split(':');\n      const serverId = parseInt(serverIdString, 10);\n      const socketId = parseInt(socketIdString, 10);\n      results.push([key, serverId, socketId]);\n    }\n    return results;\n  }\n\n  regexes(key:string, serverId:number, socketId:number):Array<string> {\n    const sessionKey = `${key}:${serverId}:${socketId}`;\n    return [...this.map.getTargets(sessionKey)];\n  }\n}\n\n"],"file":"publisher-session-manager.js"}